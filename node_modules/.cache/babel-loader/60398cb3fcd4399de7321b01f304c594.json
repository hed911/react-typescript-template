{"ast":null,"code":"var _jsxFileName = \"/Users/eduardoescobar/proyectos/own/hedu911-template/src/components/QueryView/DynamicForm/FormField/FormField.tsx\";\nimport React from \"react\";\nimport styles from \"./FormField.module.css\";\n\nconst FormField = ({\n  descriptor,\n  valueChanged\n}) => {\n  let classes = [\"form-control\"];\n\n  if (descriptor.upCase === true) {\n    classes.push(styles.upcase);\n  }\n\n  if (descriptor.classes) {\n    classes = classes.concat(descriptor.classes);\n  }\n\n  let input = /*#__PURE__*/React.createElement(\"input\", {\n    name: descriptor.name,\n    type: descriptor.type,\n    value: descriptor.value,\n    min: descriptor.min,\n    max: descriptor.max,\n    placeholder: descriptor.placeholder,\n    className: classes.join(\" \"),\n    onChange: e => valueChanged(e.target.name, e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  });\n\n  if (descriptor.type === \"select\") {\n    let options = null;\n\n    if (descriptor.items) {\n      options = descriptor.items.map(item => /*#__PURE__*/React.createElement(\"option\", {\n        selected: descriptor.selectedItemKey === item.key,\n        value: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, item.value));\n    }\n\n    input = /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: descriptor.name,\n      onChange: e => valueChanged(e.target.name, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: descriptor.selectedItemKey === \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, descriptor.placeholder), options);\n  }\n\n  if (input.type === \"textarea\") {\n    input = /*#__PURE__*/React.createElement(\"textarea\", {\n      name: descriptor.name,\n      placeholder: descriptor.placeholder,\n      rows: 4,\n      cols: 30,\n      className: classes.join(\" \"),\n      onChange: e => valueChanged(e.target.name, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, descriptor.value, \"x\");\n  }\n\n  return input;\n};\n\nexport default FormField;","map":{"version":3,"sources":["/Users/eduardoescobar/proyectos/own/hedu911-template/src/components/QueryView/DynamicForm/FormField/FormField.tsx"],"names":["React","styles","FormField","descriptor","valueChanged","classes","upCase","push","upcase","concat","input","name","type","value","min","max","placeholder","join","e","target","options","items","map","item","selectedItemKey","key"],"mappings":"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","sourcesContent":["import React, { MouseEvent } from \"react\";\n\nimport styles from \"./FormField.module.css\";\nimport { InputDescriptor } from \"../DynamicForm\";\n\ntype Props = {\n  descriptor: InputDescriptor;\n  valueChanged(name: string, value: string): any;\n};\n\nconst FormField: React.FC<Props> = ({ descriptor, valueChanged }) => {\n  let classes = [\"form-control\"];\n  if (descriptor.upCase === true) {\n    classes.push(styles.upcase);\n  }\n  if (descriptor.classes) {\n    classes = classes.concat(descriptor.classes);\n  }\n  let input = (\n    <input\n      name={descriptor.name}\n      type={descriptor.type}\n      value={descriptor.value}\n      min={descriptor.min}\n      max={descriptor.max}\n      placeholder={descriptor.placeholder}\n      className={classes.join(\" \")}\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n        valueChanged(e.target.name, e.target.value)\n      }\n    />\n  );\n  if (descriptor.type === \"select\") {\n    let options = null;\n    if (descriptor.items) {\n      options = descriptor.items.map((item) => (\n        <option\n          selected={descriptor.selectedItemKey === item.key}\n          value={item.key}\n        >\n          {item.value}\n        </option>\n      ));\n    }\n    input = (\n      <select\n        className=\"form-control\"\n        name={descriptor.name}\n        onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n          valueChanged(e.target.name, e.target.value)\n        }\n      >\n        <option selected={descriptor.selectedItemKey === \"\"}>\n          {descriptor.placeholder}\n        </option>\n        {options}\n      </select>\n    );\n  }\n  if (input.type === \"textarea\") {\n    input = (\n      <textarea\n        name={descriptor.name}\n        placeholder={descriptor.placeholder}\n        rows={4}\n        cols={30}\n        className={classes.join(\" \")}\n        onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n          valueChanged(e.target.name, e.target.value)\n        }\n      >\n        {descriptor.value}x\n      </textarea>\n    );\n  }\n\n  return input;\n};\n\nexport default FormField;\n"]},"metadata":{},"sourceType":"module"}