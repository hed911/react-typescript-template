{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  counter: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  action.type;\n\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      return updateObject(state, {\n        counter: state.counter + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return updateObject(state, {\n        counter: state.counter - 1\n      });\n\n    case actionTypes.ADD:\n      return updateObject(state, {\n        counter: state.counter + action.val\n      });\n\n    case actionTypes.SUBTRACT:\n      return updateObject(state, {\n        counter: state.counter - action.val\n      });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/eduardoescobar/proyectos/own/hedu911-template/src/store/reducers/counter.ts"],"names":["actionTypes","updateObject","initialState","counter","reducer","state","action","type","INCREMENT","DECREMENT","ADD","val","SUBTRACT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAGA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAsC,GAAG;AAC7CC,EAAAA,OAAO,EAAE;AADoC,CAA/C;;AAIA,MAAMC,OAAO,GAAG,CACdC,KAA+B,GAAGH,YADpB,EAEdI,MAFc,KAGe;AAC7BA,EAAAA,MAAM,CAACC,IAAP;;AACA,UAAQD,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,SAAjB;AACE,aAAOP,YAAY,CAACI,KAAD,EAAQ;AAAEF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAA3B,OAAR,CAAnB;;AACF,SAAKH,WAAW,CAACS,SAAjB;AACE,aAAOR,YAAY,CAACI,KAAD,EAAQ;AAAEF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAA3B,OAAR,CAAnB;;AACF,SAAKH,WAAW,CAACU,GAAjB;AACE,aAAOT,YAAY,CAACI,KAAD,EAAQ;AACzBF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAiBG,MAAD,CAAkCK;AADlC,OAAR,CAAnB;;AAGF,SAAKX,WAAW,CAACY,QAAjB;AACE,aAAOX,YAAY,CAACI,KAAD,EAAQ;AACzBF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAiBG,MAAD,CAAwCK;AADxC,OAAR,CAAnB;AAVJ;;AAcA,SAAON,KAAP;AACD,CApBD;;AAsBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport * as counterActions from \"../actions/counterActions\";\n\nimport { updateObject } from \"../utility\";\n\nconst initialState: actionTypes.CounterState = {\n  counter: 0,\n};\n\nconst reducer = (\n  state: actionTypes.CounterState = initialState,\n  action: actionTypes.CounterActionTypes\n): actionTypes.CounterState => {\n  action.type;\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      return updateObject(state, { counter: state.counter + 1 });\n    case actionTypes.DECREMENT:\n      return updateObject(state, { counter: state.counter - 1 });\n    case actionTypes.ADD:\n      return updateObject(state, {\n        counter: state.counter + (action as actionTypes.AddAction).val,\n      });\n    case actionTypes.SUBTRACT:\n      return updateObject(state, {\n        counter: state.counter - (action as actionTypes.SubstractAction).val,\n      });\n  }\n  return state;\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}