{"ast":null,"code":"var _jsxFileName = \"/Users/eduardoescobar/proyectos/own/hedu911-template/src/components/QueryView/DynamicForm/DynamicForm.tsx\";\nimport React from \"react\";\nimport FormField from \"./FormField/FormField\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst DynamicForm = ({\n  elements,\n  title,\n  submitText,\n  show,\n  size,\n  submitEnabled,\n  submitted,\n  handleClose,\n  valueChanged\n}) => {\n  const parsedParams = () => {\n    const result = [];\n    elements.forEach(function (item) {\n      if (item.type == \"text\" || item.type == \"date\" || item.type == \"number\") {\n        result.push({\n          key: item.name,\n          value: item.value\n        });\n      } else {\n        if (item.type == \"select\") {\n          result.push({\n            key: item.name,\n            value: item.selectedItemKey\n          });\n        }\n      }\n    });\n    return result;\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    submitted(parsedParams());\n  };\n\n  const items = elements.map(element => /*#__PURE__*/React.createElement(\"div\", {\n    key: element.name,\n    className: \"col-sm-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, element.displayName), /*#__PURE__*/React.createElement(FormField, {\n    descriptor: element,\n    valueChanged: (name, value) => valueChanged(name, value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  })));\n  return /*#__PURE__*/React.createElement(Modal, {\n    cssModule: {\n      \"modal-title\": \"w-100 text-center\"\n    },\n    size: size,\n    show: show,\n    onHide: () => handleClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, title)), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => submitHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, items), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: submitText,\n    disabled: submitEnabled,\n    className: \"btn btn-success btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default DynamicForm;","map":{"version":3,"sources":["/Users/eduardoescobar/proyectos/own/hedu911-template/src/components/QueryView/DynamicForm/DynamicForm.tsx"],"names":["React","FormField","Modal","DynamicForm","elements","title","submitText","show","size","submitEnabled","submitted","handleClose","valueChanged","parsedParams","result","forEach","item","type","push","key","name","value","selectedItemKey","submitHandler","e","preventDefault","items","map","element","displayName"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport useHttp from \"../../../hooks/http\";\nimport FormField from \"./FormField/FormField\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nexport type SelectItem = {\n  key: string;\n  value: string;\n};\n\nexport type InputDescriptor = {\n  displayName: string;\n  name: string;\n  type: \"text\" | \"select\" | \"number\" | \"textarea\" | \"date\";\n  value?: string;\n  placeholder?: string;\n  min?: number;\n  max?: number;\n  upCase?: boolean;\n  isDate?: boolean;\n  classes?: Array<string>;\n  items?: Array<SelectItem>;\n  selectedItemKey?: string;\n  required: boolean;\n};\n\ninterface UrlItem {\n  key: string;\n  value: string;\n}\n\ntype Props = {\n  elements: Array<InputDescriptor>;\n  title: string;\n  submitText: string;\n  show: boolean;\n  size: \"sm\" | \"lg\" | \"xl\" | undefined;\n  submitEnabled: boolean;\n  submitted(data: any): any;\n  handleClose(): any;\n  valueChanged(name: string, value: string): any;\n};\n\nconst DynamicForm: React.FC<Props> = ({\n  elements,\n  title,\n  submitText,\n  show,\n  size,\n  submitEnabled,\n  submitted,\n  handleClose,\n  valueChanged,\n}) => {\n  const parsedParams = (): Array<UrlItem> => {\n    const result: Array<UrlItem> = [];\n    elements.forEach(function (item: InputDescriptor) {\n      if (item.type == \"text\" || item.type == \"date\" || item.type == \"number\") {\n        result.push({ key: item.name, value: item.value! });\n      } else {\n        if (item.type == \"select\") {\n          result.push({ key: item.name, value: item.selectedItemKey! });\n        }\n      }\n    });\n    return result;\n  };\n\n  const submitHandler = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    submitted(parsedParams());\n  };\n\n  const items = elements.map((element) => (\n    <div key={element.name} className=\"col-sm-6\">\n      <label>{element.displayName}</label>\n      <FormField\n        descriptor={element}\n        valueChanged={(name: string, value: string) =>\n          valueChanged(name, value)\n        }\n      />\n    </div>\n  ));\n\n  return (\n    <Modal\n      cssModule={{ \"modal-title\": \"w-100 text-center\" }}\n      size={size}\n      show={show}\n      onHide={() => handleClose()}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <form onSubmit={(e: React.MouseEvent<HTMLElement>) => submitHandler(e)}>\n          <div className=\"form-group row\">{items}</div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"text-center\">\n                <input\n                  type=\"submit\"\n                  value={submitText}\n                  disabled={submitEnabled}\n                  className=\"btn btn-success btn-lg\"\n                />\n              </div>\n            </div>\n          </div>\n        </form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default DynamicForm;\n"]},"metadata":{},"sourceType":"module"}