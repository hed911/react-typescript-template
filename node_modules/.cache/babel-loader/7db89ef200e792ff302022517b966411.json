{"ast":null,"code":"var _jsxFileName = \"/Users/eduardoescobar/proyectos/own/hedu911-template/src/index.tsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport counterReducer from \"./store/reducers/counter\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n/*const rootReducer = combineReducers({\n  counterReducer,\n});*/\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(counterReducer, composeEnhancers(applyMiddleware(thunk)));\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }\n}))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/eduardoescobar/proyectos/own/hedu911-template/src/index.tsx"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","compose","thunk","counterReducer","App","serviceWorker","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,cAAP,MAA2B,0BAA3B;AAGA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA;;;;AASA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CP,OAAxE;AACA,MAAMQ,KAAK,GAAGV,WAAW,CACvBI,cADuB,EAEvBG,gBAAgB,CAACN,eAAe,CAACE,KAAD,CAAhB,CAFO,CAAzB;AAKAL,QAAQ,CAACa,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAP,aAAa,CAACQ,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport counterReducer from \"./store/reducers/counter\";\nimport rootReducer from \"./store/reducers/root\";\nimport * as actionTypes from \"./store/actions/actionTypes\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n/*const rootReducer = combineReducers({\n  counterReducer,\n});*/\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  counterReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}