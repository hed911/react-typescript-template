{"ast":null,"code":"var _jsxFileName = \"/Users/eduardoescobar/proyectos/own/hedu911-template/src/components/QueryView/TableFilters/FilterField/FilterField.tsx\";\nimport React from \"react\";\nimport styles from \"./FilterField.module.css\";\n\nconst FilterField = ({\n  descriptor,\n  actionTriggered\n}) => {\n  let classes = [\"form-control\"];\n\n  if (descriptor.upCase === true) {\n    classes.push(styles.upcase);\n  }\n\n  if (descriptor.classes) {\n    classes = classes.concat(descriptor.classes);\n  }\n\n  let clicked = () => {\n    if (descriptor.type == \"submit\") {\n      actionTriggered(descriptor.id);\n    }\n  };\n\n  let input = /*#__PURE__*/React.createElement(\"input\", {\n    name: descriptor.name,\n    type: descriptor.type,\n    value: descriptor.value,\n    min: descriptor.min,\n    max: descriptor.max,\n    placeholder: descriptor.placeholder,\n    className: classes.join(\" \"),\n    onClick: clicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  });\n\n  if (descriptor.type === \"select\") {\n    let options = null;\n\n    if (descriptor.items) {\n      options = descriptor.items.map(item => /*#__PURE__*/React.createElement(\"option\", {\n        selected: descriptor.selectedItemKey === item.key,\n        value: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, item.value));\n    }\n\n    input = /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: descriptor.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: descriptor.selectedItemKey === \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, descriptor.placeholder), options);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }, input);\n};\n\nexport default FilterField;","map":{"version":3,"sources":["/Users/eduardoescobar/proyectos/own/hedu911-template/src/components/QueryView/TableFilters/FilterField/FilterField.tsx"],"names":["React","styles","FilterField","descriptor","actionTriggered","classes","upCase","push","upcase","concat","clicked","type","id","input","name","value","min","max","placeholder","join","options","items","map","item","selectedItemKey","key","option"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;;AAQA,MAAMC,WAA4B,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAqC;AACxE,MAAIC,OAAO,GAAG,CAAC,cAAD,CAAd;;AACA,MAAIF,UAAU,CAACG,MAAX,KAAsB,IAA1B,EAAgC;AAC9BD,IAAAA,OAAO,CAACE,IAAR,CAAaN,MAAM,CAACO,MAApB;AACD;;AACD,MAAIL,UAAU,CAACE,OAAf,EAAwB;AACtBA,IAAAA,OAAO,GAAGA,OAAO,CAACI,MAAR,CAAeN,UAAU,CAACE,OAA1B,CAAV;AACD;;AACD,MAAIK,OAAO,GAAG,MAAM;AAClB,QAAIP,UAAU,CAACQ,IAAX,IAAmB,QAAvB,EAAiC;AAC/BP,MAAAA,eAAe,CAACD,UAAU,CAACS,EAAZ,CAAf;AACD;AACF,GAJD;;AAKA,MAAIC,KAAK,gBACP;AACE,IAAA,IAAI,EAAEV,UAAU,CAACW,IADnB;AAEE,IAAA,IAAI,EAAEX,UAAU,CAACQ,IAFnB;AAGE,IAAA,KAAK,EAAER,UAAU,CAACY,KAHpB;AAIE,IAAA,GAAG,EAAEZ,UAAU,CAACa,GAJlB;AAKE,IAAA,GAAG,EAAEb,UAAU,CAACc,GALlB;AAME,IAAA,WAAW,EAAEd,UAAU,CAACe,WAN1B;AAOE,IAAA,SAAS,EAAEb,OAAO,CAACc,IAAR,CAAa,GAAb,CAPb;AAQE,IAAA,OAAO,EAAET,OARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;;AAYA,MAAIP,UAAU,CAACQ,IAAX,KAAoB,QAAxB,EAAkC;AAChC,QAAIS,OAAO,GAAG,IAAd;;AACA,QAAIjB,UAAU,CAACkB,KAAf,EAAsB;AACpBD,MAAAA,OAAO,GAAGjB,UAAU,CAACkB,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,iBAC7B;AACE,QAAA,QAAQ,EAAEpB,UAAU,CAACqB,eAAX,KAA+BD,IAAI,CAACE,GADhD;AAEE,QAAA,KAAK,EAAEF,IAAI,CAACE,GAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGF,IAAI,CAACR,KAJR,CADQ,CAAV;AAQD;;AACDF,IAAAA,KAAK,gBACH;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,IAAI,EAAEV,UAAU,CAACW,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,QAAQ,EAAEX,UAAU,CAACqB,eAAX,KAA+B,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGrB,UAAU,CAACe,WADd,CADF,EAIGE,OAJH,CADF;AAQD;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAEnB,MAAM,CAACyB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCb,KAAhC,CAAP;AACD,CAhDD;;AAkDA,eAAeX,WAAf","sourcesContent":["import React from \"react\";\n\nimport styles from \"./FilterField.module.css\";\nimport { InputDescriptor } from \"../TableFilters\";\n\ntype Props = {\n  descriptor: InputDescriptor;\n  actionTriggered(action: string): any;\n};\n\nconst FilterField: React.FC<Props> = ({ descriptor, actionTriggered }) => {\n  let classes = [\"form-control\"];\n  if (descriptor.upCase === true) {\n    classes.push(styles.upcase);\n  }\n  if (descriptor.classes) {\n    classes = classes.concat(descriptor.classes);\n  }\n  let clicked = () => {\n    if (descriptor.type == \"submit\") {\n      actionTriggered(descriptor.id);\n    }\n  };\n  let input = (\n    <input\n      name={descriptor.name}\n      type={descriptor.type}\n      value={descriptor.value}\n      min={descriptor.min}\n      max={descriptor.max}\n      placeholder={descriptor.placeholder}\n      className={classes.join(\" \")}\n      onClick={clicked}\n    />\n  );\n  if (descriptor.type === \"select\") {\n    let options = null;\n    if (descriptor.items) {\n      options = descriptor.items.map((item) => (\n        <option\n          selected={descriptor.selectedItemKey === item.key}\n          value={item.key}\n        >\n          {item.value}\n        </option>\n      ));\n    }\n    input = (\n      <select className=\"form-control\" name={descriptor.name}>\n        <option selected={descriptor.selectedItemKey === \"\"}>\n          {descriptor.placeholder}\n        </option>\n        {options}\n      </select>\n    );\n  }\n\n  return <div className={styles.option}>{input}</div>;\n};\n\nexport default FilterField;\n"]},"metadata":{},"sourceType":"module"}