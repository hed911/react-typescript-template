{"ast":null,"code":"var _jsxFileName = \"/Users/eduardoescobar/proyectos/own/hedu911-template/src/components/QueryView/TableFilters/FilterField/FilterField.tsx\";\nimport React from \"react\";\nimport styles from \"./FilterField.module.css\";\n\nconst FilterField = ({\n  descriptor,\n  actionTriggered,\n  valueChanged\n}) => {\n  let classes = [\"form-control\"];\n\n  if (descriptor.upCase === true) {\n    classes.push(styles.upcase);\n  }\n\n  if (descriptor.classes) {\n    classes = classes.concat(descriptor.classes);\n  }\n\n  let clicked = e => {\n    if (descriptor.type == \"submit\") {\n      e.preventDefault();\n      actionTriggered(descriptor.name);\n    }\n  };\n\n  let input = /*#__PURE__*/React.createElement(\"input\", {\n    name: descriptor.name,\n    type: descriptor.type,\n    value: descriptor.value,\n    min: descriptor.min,\n    max: descriptor.max,\n    placeholder: descriptor.placeholder,\n    className: classes.join(\" \"),\n    onClick: e => clicked(e),\n    onChange: e => valueChanged(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  });\n\n  if (descriptor.type === \"select\") {\n    let options = null;\n\n    if (descriptor.items) {\n      options = descriptor.items.map(item => /*#__PURE__*/React.createElement(\"option\", {\n        selected: descriptor.selectedItemKey === item.key,\n        value: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, item.value));\n    }\n\n    input = /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: descriptor.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: descriptor.selectedItemKey === \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, descriptor.placeholder), options);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }\n  }, input);\n};\n\nexport default FilterField;","map":{"version":3,"sources":["/Users/eduardoescobar/proyectos/own/hedu911-template/src/components/QueryView/TableFilters/FilterField/FilterField.tsx"],"names":["React","styles","FilterField","descriptor","actionTriggered","valueChanged","classes","upCase","push","upcase","concat","clicked","e","type","preventDefault","name","input","value","min","max","placeholder","join","options","items","map","item","selectedItemKey","key","option"],"mappings":";AAAA,OAAOA,KAAP,MAAkC,OAAlC;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;;AASA,MAAMC,WAA4B,GAAG,CAAC;AACpCC,EAAAA,UADoC;AAEpCC,EAAAA,eAFoC;AAGpCC,EAAAA;AAHoC,CAAD,KAI/B;AACJ,MAAIC,OAAO,GAAG,CAAC,cAAD,CAAd;;AACA,MAAIH,UAAU,CAACI,MAAX,KAAsB,IAA1B,EAAgC;AAC9BD,IAAAA,OAAO,CAACE,IAAR,CAAaP,MAAM,CAACQ,MAApB;AACD;;AACD,MAAIN,UAAU,CAACG,OAAf,EAAwB;AACtBA,IAAAA,OAAO,GAAGA,OAAO,CAACI,MAAR,CAAeP,UAAU,CAACG,OAA1B,CAAV;AACD;;AACD,MAAIK,OAAO,GAAIC,CAAD,IAAsC;AAClD,QAAIT,UAAU,CAACU,IAAX,IAAmB,QAAvB,EAAiC;AAC/BD,MAAAA,CAAC,CAACE,cAAF;AACAV,MAAAA,eAAe,CAACD,UAAU,CAACY,IAAZ,CAAf;AACD;AACF,GALD;;AAMA,MAAIC,KAAK,gBACP;AACE,IAAA,IAAI,EAAEb,UAAU,CAACY,IADnB;AAEE,IAAA,IAAI,EAAEZ,UAAU,CAACU,IAFnB;AAGE,IAAA,KAAK,EAAEV,UAAU,CAACc,KAHpB;AAIE,IAAA,GAAG,EAAEd,UAAU,CAACe,GAJlB;AAKE,IAAA,GAAG,EAAEf,UAAU,CAACgB,GALlB;AAME,IAAA,WAAW,EAAEhB,UAAU,CAACiB,WAN1B;AAOE,IAAA,SAAS,EAAEd,OAAO,CAACe,IAAR,CAAa,GAAb,CAPb;AAQE,IAAA,OAAO,EAAGT,CAAD,IAAsCD,OAAO,CAACC,CAAD,CARxD;AASE,IAAA,QAAQ,EAAGA,CAAD,IAA0CP,YAAY,CAACO,CAAD,CATlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;;AAaA,MAAIT,UAAU,CAACU,IAAX,KAAoB,QAAxB,EAAkC;AAChC,QAAIS,OAAO,GAAG,IAAd;;AACA,QAAInB,UAAU,CAACoB,KAAf,EAAsB;AACpBD,MAAAA,OAAO,GAAGnB,UAAU,CAACoB,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,iBAC7B;AACE,QAAA,QAAQ,EAAEtB,UAAU,CAACuB,eAAX,KAA+BD,IAAI,CAACE,GADhD;AAEE,QAAA,KAAK,EAAEF,IAAI,CAACE,GAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGF,IAAI,CAACR,KAJR,CADQ,CAAV;AAQD;;AACDD,IAAAA,KAAK,gBACH;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,IAAI,EAAEb,UAAU,CAACY,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,QAAQ,EAAEZ,UAAU,CAACuB,eAAX,KAA+B,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGvB,UAAU,CAACiB,WADd,CADF,EAIGE,OAJH,CADF;AAQD;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAErB,MAAM,CAAC2B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCZ,KAAhC,CAAP;AACD,CAtDD;;AAwDA,eAAed,WAAf","sourcesContent":["import React, { MouseEvent } from \"react\";\n\nimport styles from \"./FilterField.module.css\";\nimport { InputDescriptor } from \"../TableFilters\";\n\ntype Props = {\n  descriptor: InputDescriptor;\n  actionTriggered(action: string): any;\n  valueChanged(e: React.ChangeEvent<HTMLInputElement>): any;\n};\n\nconst FilterField: React.FC<Props> = ({\n  descriptor,\n  actionTriggered,\n  valueChanged,\n}) => {\n  let classes = [\"form-control\"];\n  if (descriptor.upCase === true) {\n    classes.push(styles.upcase);\n  }\n  if (descriptor.classes) {\n    classes = classes.concat(descriptor.classes);\n  }\n  let clicked = (e: React.MouseEvent<HTMLElement>) => {\n    if (descriptor.type == \"submit\") {\n      e.preventDefault();\n      actionTriggered(descriptor.name);\n    }\n  };\n  let input = (\n    <input\n      name={descriptor.name}\n      type={descriptor.type}\n      value={descriptor.value}\n      min={descriptor.min}\n      max={descriptor.max}\n      placeholder={descriptor.placeholder}\n      className={classes.join(\" \")}\n      onClick={(e: React.MouseEvent<HTMLElement>) => clicked(e)}\n      onChange={(e: React.FormEvent<HTMLInputElement>) => valueChanged(e)}\n    />\n  );\n  if (descriptor.type === \"select\") {\n    let options = null;\n    if (descriptor.items) {\n      options = descriptor.items.map((item) => (\n        <option\n          selected={descriptor.selectedItemKey === item.key}\n          value={item.key}\n        >\n          {item.value}\n        </option>\n      ));\n    }\n    input = (\n      <select className=\"form-control\" name={descriptor.name}>\n        <option selected={descriptor.selectedItemKey === \"\"}>\n          {descriptor.placeholder}\n        </option>\n        {options}\n      </select>\n    );\n  }\n\n  return <div className={styles.option}>{input}</div>;\n};\n\nexport default FilterField;\n"]},"metadata":{},"sourceType":"module"}