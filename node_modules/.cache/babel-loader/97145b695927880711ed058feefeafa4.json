{"ast":null,"code":"var _jsxFileName = \"/Users/eduardoescobar/proyectos/own/hedu911-template/src/components/QueryView/DynamicForm/DynamicForm.tsx\";\nimport React, { useState } from \"react\";\nimport useHttp from \"../../../hooks/http\";\nimport FormField from \"./FormField/FormField\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst DynamicForm = ({\n  elements,\n  requestUrl,\n  requestType,\n  submitted,\n  title,\n  submitText,\n  show,\n  handleClose,\n  size\n}) => {\n  const [filterElements, setFilterElements] = useState([]);\n  const {\n    isLoading,\n    error,\n    data,\n    sendRequest,\n    reqExtra,\n    reqIdentifer,\n    clear\n  } = useHttp();\n\n  const valueChanged = (name, value) => {\n    let updatedFilterElements = [...filterElements];\n    updatedFilterElements.forEach(function (item) {\n      if (item.name == name) {\n        if (item.type == \"text\" || item.type == \"date\") {\n          item.value = value;\n        } else {\n          if (item.type == \"select\") {\n            item.selectedItemKey = value;\n          }\n        }\n      }\n    });\n    setFilterElements(updatedFilterElements);\n  };\n\n  const filterParamsUrl = () => {\n    let result = [];\n    filterParams().filter(i => i.value !== \"\").forEach(function (item) {\n      result.push(`${item.key}=${encodeURIComponent(item.value)}`);\n    });\n    return result.join(\"&\");\n  };\n\n  const filterParams = () => {\n    const result = [];\n    filterElements.forEach(function (item) {\n      if (item.type == \"text\" || item.type == \"date\") {\n        result.push({\n          key: item.name,\n          value: item.value\n        });\n      } else {\n        if (item.type == \"select\") {\n          result.push({\n            key: item.name,\n            value: item.selectedItemKey\n          });\n        }\n      }\n    });\n    return result;\n  };\n\n  const submitHandler = () => {\n    const params = filterParamsUrl();\n\n    switch (requestType) {\n      case \"POST\":\n        sendRequest(`${requestUrl}?${params}`, \"POST\", null, null, \"SET\");\n        break;\n\n      case \"PUT\":\n        sendRequest(`${requestUrl}?${params}`, \"PUT\", null, null, \"SET\");\n        break;\n    }\n  };\n\n  const items = elements.map(element => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, element.displayName), /*#__PURE__*/React.createElement(FormField, {\n    descriptor: element,\n    valueChanged: (name, value) => valueChanged(name, value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  })));\n  return /*#__PURE__*/React.createElement(Modal, {\n    size: size,\n    show: show,\n    onHide: () => handleClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, title)), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: () => submitHandler(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, items, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: submitText,\n    disabled: isLoading,\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default DynamicForm;","map":{"version":3,"sources":["/Users/eduardoescobar/proyectos/own/hedu911-template/src/components/QueryView/DynamicForm/DynamicForm.tsx"],"names":["React","useState","useHttp","FormField","Modal","DynamicForm","elements","requestUrl","requestType","submitted","title","submitText","show","handleClose","size","filterElements","setFilterElements","isLoading","error","data","sendRequest","reqExtra","reqIdentifer","clear","valueChanged","name","value","updatedFilterElements","forEach","item","type","selectedItemKey","filterParamsUrl","result","filterParams","filter","i","push","key","encodeURIComponent","join","submitHandler","params","items","map","element","displayName"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport useHttp from \"../../../hooks/http\";\nimport FormField from \"./FormField/FormField\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nexport type SelectItem = {\n  key: string;\n  value: string;\n};\n\nexport type InputDescriptor = {\n  displayName: string;\n  name: string;\n  type: string;\n  value?: string;\n  placeholder?: string;\n  min?: number;\n  max?: number;\n  upCase?: boolean;\n  isDate?: boolean;\n  classes?: Array<string>;\n  items?: Array<SelectItem>;\n  selectedItemKey?: string;\n};\n\ninterface UrlItem {\n  key: string;\n  value: string;\n}\n\ntype Props = {\n  elements: Array<InputDescriptor>;\n  requestUrl: string;\n  requestType: string;\n  submitted(error?: string): any;\n  title: string;\n  submitText: string;\n  show: boolean;\n  handleClose(): any;\n  size: \"sm\" | \"lg\" | \"xl\" | undefined;\n};\n\nconst DynamicForm: React.FC<Props> = ({\n  elements,\n  requestUrl,\n  requestType,\n  submitted,\n  title,\n  submitText,\n  show,\n  handleClose,\n  size,\n}) => {\n  const [filterElements, setFilterElements] = useState<Array<InputDescriptor>>(\n    []\n  );\n\n  const {\n    isLoading,\n    error,\n    data,\n    sendRequest,\n    reqExtra,\n    reqIdentifer,\n    clear,\n  } = useHttp();\n\n  const valueChanged = (name: string, value: string) => {\n    let updatedFilterElements = [...filterElements];\n    updatedFilterElements.forEach(function (item: InputDescriptor) {\n      if (item.name == name) {\n        if (item.type == \"text\" || item.type == \"date\") {\n          item.value = value;\n        } else {\n          if (item.type == \"select\") {\n            item.selectedItemKey = value;\n          }\n        }\n      }\n    });\n    setFilterElements(updatedFilterElements);\n  };\n\n  const filterParamsUrl = (): string => {\n    let result: Array<string> = [];\n    filterParams()\n      .filter((i) => i.value !== \"\")\n      .forEach(function (item: UrlItem) {\n        result.push(`${item.key}=${encodeURIComponent(item.value)}`);\n      });\n    return result.join(\"&\");\n  };\n\n  const filterParams = (): Array<UrlItem> => {\n    const result: Array<UrlItem> = [];\n    filterElements.forEach(function (item: InputDescriptor) {\n      if (item.type == \"text\" || item.type == \"date\") {\n        result.push({ key: item.name, value: item.value! });\n      } else {\n        if (item.type == \"select\") {\n          result.push({ key: item.name, value: item.selectedItemKey! });\n        }\n      }\n    });\n    return result;\n  };\n\n  const submitHandler = () => {\n    const params = filterParamsUrl();\n    switch (requestType) {\n      case \"POST\":\n        sendRequest(`${requestUrl}?${params}`, \"POST\", null, null, \"SET\");\n        break;\n      case \"PUT\":\n        sendRequest(`${requestUrl}?${params}`, \"PUT\", null, null, \"SET\");\n        break;\n    }\n  };\n\n  const items = elements.map((element) => (\n    <div className=\"form-group\">\n      <label>{element.displayName}</label>\n      <FormField\n        descriptor={element}\n        valueChanged={(name: string, value: string) =>\n          valueChanged(name, value)\n        }\n      />\n    </div>\n  ));\n\n  return (\n    <Modal size={size} show={show} onHide={() => handleClose()}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <form onSubmit={() => submitHandler()}>\n          {items}\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"text-center\">\n                <input\n                  type=\"submit\"\n                  value={submitText}\n                  disabled={isLoading}\n                  className=\"btn btn-success\"\n                />\n              </div>\n            </div>\n          </div>\n        </form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default DynamicForm;\n"]},"metadata":{},"sourceType":"module"}